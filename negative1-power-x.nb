(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     81262,       1604]
NotebookOptionsPosition[     80097,       1575]
NotebookOutlinePosition[     80487,       1591]
CellTagsIndexPosition[     80444,       1588]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", "x"}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"ViewVertical", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
   RowBox[{"BoxRatios", "->", 
    RowBox[{"{", 
     RowBox[{"2.5", ",", "1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"{", 
     RowBox[{"12", ",", "2", ",", "12"}], "}"}]}], ",", " ", 
   RowBox[{"AxesStyle", "->", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899318395119874*^9, 3.899318423409182*^9}, {
  3.899318516774713*^9, 3.899318524418212*^9}, {3.8993185617759867`*^9, 
  3.899318570323771*^9}, {3.899318614064587*^9, 3.899318706760582*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"a0034742-0d14-4fdd-b9b1-e6e44992e6fa"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1:eJwUmnc8Vu8bx+29dykVFWlQRpJch28UQlEqbRGpVFRKUYgUaSBSCVmVlRFZ
15GVmb33Xs9zjKwyfs/v+ed5va7Xed3nnPtcn/t+v8/zbLC6bmbDwsTE9IiD
iYmV8f0sVzdvZUWQPNm4wvhQIKUjl95Q/UPbZPxKyPiEIGlEk9L6vUTBxFb1
ExUJwSAsHeTY0iNIPpU/dXHfHAU1KlC78DUW6g3yDhXXCpIPcOWU0TgFo+b1
c0N53yDk7tDm1AJBctPnN9F/2ylwHs1SsInOgNOxQszhaYJkp1DtCeNSCo7n
eGRE++TCusY9bX7RgmRzn5a8/jcKsp5FxdFS8yFGxe/FpSeCZLJAbsPuWxRc
krH94OxbAvZW6ZfN7wqSvur2wntMKXhm0s4X6lgG2191/kdcFiTvPTkiM7mJ
gsILLAlrLSohja48v8pIkIybTGl7X0yHGxc0hCx9aiD/c8P5SgFBkl589Ft0
Aw2Y9eI8QjY2wePmZc2sFQHym4fZujUvaND5MthH/XEzHORUEI+dECD9FZvS
vffT4FbTlqv3ulugytql9FGtAGlBv4EXPo2DhPCnYCX/dmhft26X6hsB8kTl
lVPXd41BE7OT6af2bpgPsmN9t1aArLonE/kxYgikim4QXwMGIKfwVccTAQFS
Y/XpzQbrh+DZgPOoiMwgPJzOyri1wk+e3iSg8+vdIER0e3g6RQ8CxxH+qyY9
/OTkyQiVl08HwFZZ9HfDlyEQ40upZ47mJyWZf/Ce0e0D3SZUUvEfgWbNtkR6
ED8ZSnlsKv7cC9SWNZ1OyyPw7jLb0zZvfjJB+Z9mhEAvrN5t82nTlVGQLbHY
l27HT74d9Y9kqekGroH71yL2jIGyx79ou2385N9HC5dSb7fD/hUxpnufx+FP
8sZHx9byk1dWSfQ6rG+D7MY0rrx/45DRZWypK8BPdgUZ/HQqaQGTNeKXeA1p
oL0vXGDNBB/5Z+tjEUneJtAq+Vke2EqDQ/P7nX+n8pEuy5UqvA41ULJ8hPVk
GR2E5B2O5ETxkZ8D7C2PMVXDVl/T+Lp/dKg7Frz1cxAfufe8xNOO9ZVQGrr0
UmgLBZapI10ezozjCz6rpRwrgcM2vzoy71Cwtlck67odH2l6iSa27kohhHr4
RK0KpqBbSCvw9Ek+0t3syDXSNR+oq2k28qkU2Dr4H1Tfy0eKrhY8c0cjA4oV
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
2flOUA==
       "]]},
     Annotation[#, "Charting`Private`Tag$107851#1"]& ]}, {}},
  Axes->True,
  AxesStyle->Thickness[Large],
  BoxRatios->{2.5, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{All, All, All},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{12, 2, 12},
  ViewVertical->{0, 1, 0}]], "Output",
 CellChangeTimes->{{3.8993186194943647`*^9, 3.899318707644277*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"22788a9b-39d7-404f-b952-57d4522e9ea2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"Evaluate", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"Re", "[", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Log", "[", 
                RowBox[{"-", "1"}], "]"}], "+", 
               RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], " ", 
             "x"}], "]"}], "]"}], ",", 
          RowBox[{"Im", "[", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Log", "[", 
                RowBox[{"-", "1"}], "]"}], "+", 
               RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], " ", 
             "x"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"ViewVertical", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
     RowBox[{"BoxRatios", "->", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"ViewPoint", "->", 
      RowBox[{"{", 
       RowBox[{"12", ",", "2", ",", "12"}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "->", "Thick"}], ",", 
     RowBox[{"PlotLegends", "->", "Automatic"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "6", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899318793021899*^9, 3.899318810018482*^9}, {
  3.899325285155285*^9, 3.899325286943721*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"d26e5496-b378-414a-bda1-ef732b184518"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 6, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 0, 6, 1}}, Typeset`size$$ = {
    413., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot3D[
        Evaluate[
         Table[{$CellContext`x, 
           Re[
            Exp[(Log[-1] + 2 I Pi $CellContext`k) $CellContext`x]], 
           Im[
            
            Exp[(Log[-1] + 
              2 I Pi $CellContext`k) $CellContext`x]]}, {$CellContext`k, 
           0, $CellContext`n$$}]], {$CellContext`x, -4, 4}, PlotRange -> All, 
        ViewVertical -> {0, 1, 0}, BoxRatios -> {2, 1, 1}, 
        ViewPoint -> {12, 2, 12}, AxesStyle -> Thick, PlotLegends -> 
        Automatic], "Specifications" :> {{$CellContext`n$$, 0, 6, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{457., {223., 228.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8993187951503963`*^9, 3.899318812236435*^9}, 
   3.8993252877024384`*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"b013606d-93ba-44b6-bdc1-2d56212260e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"Re", "[", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Log", "[", 
                  RowBox[{"-", "1"}], "]"}], "+", 
                 RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], " ", 
               "x"}], "]"}], "]"}], ",", 
            RowBox[{"Im", "[", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Log", "[", 
                  RowBox[{"-", "1"}], "]"}], "+", 
                 RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], " ", 
               "x"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
       RowBox[{"PlotRange", "->", "All"}], ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<Real\>\"", ",", "\"\<Imaginary\>\""}],
          "}"}]}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"\"\<k = \>\"", "<>", 
           RowBox[{"ToString", "[", "k", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
           RowBox[{"k", "/", "5"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}], "]"}], ",", 
     
     RowBox[{"Graphics3D", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
           RowBox[{"k", "/", "5"}], "]"}], ",", 
          RowBox[{"PointSize", "[", "Large", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"sliderValue", ",", 
             RowBox[{"Re", "[", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{"-", "1"}], "]"}], "+", 
                  RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], " ", 
                "sliderValue"}], "]"}], "]"}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{"-", "1"}], "]"}], "+", 
                  RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], " ", 
                "sliderValue"}], "]"}], "]"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], "]"}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"sliderValue", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899582175580599*^9, 3.899582195803092*^9}, {
  3.899582245865508*^9, 3.899582294207306*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"3cef2e18-966c-48dc-948c-aeedb7291c49"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`sliderValue$$ = 4., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`sliderValue$$], -4, 4}}, Typeset`size$$ = {
    432., {95., 99.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`sliderValue$$ = -4}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        ParametricPlot3D[
         Evaluate[
          Table[{$CellContext`x, 
            Re[
             Exp[(Log[-1] + 2 I Pi $CellContext`k) $CellContext`x]], 
            Im[
             
             Exp[(Log[-1] + 
               2 I Pi $CellContext`k) $CellContext`x]]}, {$CellContext`k, 0, 
            2}]], {$CellContext`x, -4, 4}, PlotRange -> All, 
         AxesLabel -> {"x", "Real", "Imaginary"}, PlotLegends -> 
         Table["k = " <> ToString[$CellContext`k], {$CellContext`k, 0, 2}], 
         PlotStyle -> Table[
           ColorData["Rainbow"][$CellContext`k/5], {$CellContext`k, 0, 2}]], 
        Graphics3D[
         Table[{
           ColorData["Rainbow"][$CellContext`k/5], 
           PointSize[Large], 
           Point[{$CellContext`sliderValue$$, 
             Re[
              
              Exp[(Log[-1] + 
                2 I Pi $CellContext`k) $CellContext`sliderValue$$]], 
             Im[
              
              Exp[(Log[-1] + 
                2 I Pi $CellContext`k) $CellContext`sliderValue$$]]}]}, \
{$CellContext`k, 0, 2}]]], 
      "Specifications" :> {{$CellContext`sliderValue$$, -4, 4}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{476., {140., 145.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.899582266882786*^9, 3.899582297208358*^9}},
 CellLabel->
  "Out[132]=",ExpressionUUID->"d1f6168a-54c5-4ce1-bb74-ebba7024218e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"   ", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"ParametricPlot3D", "[", 
           RowBox[{
            RowBox[{"Evaluate", "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"Re", "[", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"-", "1"}], "]"}], "+", 
                    RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], 
                    " ", "x"}], "]"}], "]"}], ",", 
                 RowBox[{"Im", "[", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"-", "1"}], "]"}], "+", 
                    RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], 
                    " ", "x"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
            RowBox[{"PlotRange", "->", "All"}], ",", 
            RowBox[{"AxesLabel", "->", 
             RowBox[{"{", 
              RowBox[{
              "\"\<x\>\"", ",", "\"\<Real\>\"", ",", "\"\<Imaginary\>\""}], 
              "}"}]}], ",", 
            RowBox[{"PlotLegends", "->", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"\"\<k = \>\"", "<>", 
                RowBox[{"ToString", "[", "k", "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
            RowBox[{"PlotStyle", "->", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
                RowBox[{"k", "/", "5"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}], "]"}], 
          ",", 
          RowBox[{"Graphics3D", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
                RowBox[{"k", "/", "5"}], "]"}], ",", 
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{"sliderValue", ",", 
                  RowBox[{"Re", "[", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"-", "1"}], "]"}], "+", 
                    RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], 
                    " ", "sliderValue"}], "]"}], "]"}], ",", 
                  RowBox[{"Im", "[", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"-", "1"}], "]"}], "+", 
                    RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], 
                    " ", "sliderValue"}], "]"}], "]"}]}], "}"}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
         "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"ParametricPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"Re", "[", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"-", "1"}], "]"}], "+", 
                    RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], 
                    " ", "x"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
            RowBox[{"PlotRange", "->", "All"}], ",", 
            RowBox[{"AxesLabel", "->", 
             RowBox[{"{", 
              RowBox[{"\"\<x\>\"", ",", "\"\<Real\>\""}], "}"}]}], ",", 
            RowBox[{"PlotStyle", "->", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
                RowBox[{"k", "/", "5"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}], "]"}], 
          ",", 
          RowBox[{"Graphics", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
                RowBox[{"k", "/", "5"}], "]"}], ",", 
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{"sliderValue", ",", 
                  RowBox[{"Re", "[", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"-", "1"}], "]"}], "+", 
                    RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], 
                    " ", "sliderValue"}], "]"}], "]"}]}], "}"}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
         "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"ParametricPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Re", "[", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"-", "1"}], "]"}], "+", 
                    RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], 
                    " ", "x"}], "]"}], "]"}], ",", 
                 RowBox[{"Im", "[", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"-", "1"}], "]"}], "+", 
                    RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], 
                    " ", "x"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
            RowBox[{"PlotRange", "->", "All"}], ",", 
            RowBox[{"AxesLabel", "->", 
             RowBox[{"{", 
              RowBox[{"\"\<x\>\"", ",", "\"\<Imaginary\>\""}], "}"}]}], ",", 
            RowBox[{"PlotStyle", "->", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
                RowBox[{"k", "/", "5"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}], "]"}], 
          ",", 
          RowBox[{"Graphics", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
                RowBox[{"k", "/", "5"}], "]"}], ",", 
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Re", "[", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"-", "1"}], "]"}], "+", 
                    RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], 
                    " ", "sliderValue"}], "]"}], "]"}], ",", 
                  RowBox[{"Im", "[", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"-", "1"}], "]"}], "+", 
                    RowBox[{"2", " ", "I", " ", "Pi", " ", "k"}]}], ")"}], 
                    " ", "sliderValue"}], "]"}], "]"}]}], "}"}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
         "]"}], "}"}]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"sliderValue", ",", 
      RowBox[{"-", "4"}], ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899582622701906*^9, 3.899582622707939*^9}, {
  3.8995827027980824`*^9, 3.8995827028043013`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"99139fc3-a36e-498b-a8bb-121d9a131c2c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`sliderValue$$ = 0.6600000000000001, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`sliderValue$$], -4, 2}}, Typeset`size$$ = {
    205., {214., 218.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`sliderValue$$ = -4}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> GraphicsGrid[{{
          Show[
           ParametricPlot3D[
            Evaluate[
             Table[{$CellContext`x, 
               Re[
                Exp[(Log[-1] + 2 I Pi $CellContext`k) $CellContext`x]], 
               Im[
                
                Exp[(Log[-1] + 
                  2 I Pi $CellContext`k) $CellContext`x]]}, {$CellContext`k, 
               0, 2}]], {$CellContext`x, -4, 2}, PlotRange -> All, 
            AxesLabel -> {"x", "Real", "Imaginary"}, PlotLegends -> 
            Table["k = " <> ToString[$CellContext`k], {$CellContext`k, 0, 2}],
             PlotStyle -> Table[
              ColorData[
              "Rainbow"][$CellContext`k/5], {$CellContext`k, 0, 2}]], 
           Graphics3D[
            Table[{
              ColorData["Rainbow"][$CellContext`k/5], 
              PointSize[Large], 
              Point[{$CellContext`sliderValue$$, 
                Re[
                 
                 Exp[(Log[-1] + 
                   2 I Pi $CellContext`k) $CellContext`sliderValue$$]], 
                Im[
                 
                 Exp[(Log[-1] + 
                   2 I Pi $CellContext`k) $CellContext`sliderValue$$]]}]}, \
{$CellContext`k, 0, 2}]]]}, {
          Show[
           ParametricPlot[
            Evaluate[
             Table[{$CellContext`x, 
               Re[
                
                Exp[(Log[-1] + 
                  2 I Pi $CellContext`k) $CellContext`x]]}, {$CellContext`k, 
               0, 2}]], {$CellContext`x, -4, 2}, PlotRange -> All, 
            AxesLabel -> {"x", "Real"}, PlotStyle -> Table[
              ColorData[
              "Rainbow"][$CellContext`k/5], {$CellContext`k, 0, 2}]], 
           Graphics[
            Table[{
              ColorData["Rainbow"][$CellContext`k/5], 
              PointSize[Large], 
              Point[{$CellContext`sliderValue$$, 
                Re[
                 
                 Exp[(Log[-1] + 
                   2 I Pi $CellContext`k) $CellContext`sliderValue$$]]}]}, \
{$CellContext`k, 0, 2}]]]}, {
          Show[
           ParametricPlot[
            Evaluate[
             Table[{
               Re[
                Exp[(Log[-1] + 2 I Pi $CellContext`k) $CellContext`x]], 
               Im[
                
                Exp[(Log[-1] + 
                  2 I Pi $CellContext`k) $CellContext`x]]}, {$CellContext`k, 
               0, 2}]], {$CellContext`x, -4, 2}, PlotRange -> All, 
            AxesLabel -> {"x", "Imaginary"}, PlotStyle -> Table[
              ColorData[
              "Rainbow"][$CellContext`k/5], {$CellContext`k, 0, 2}]], 
           Graphics[
            Table[{
              ColorData["Rainbow"][$CellContext`k/5], 
              PointSize[Large], 
              Point[{
                Re[
                 
                 Exp[(Log[-1] + 
                   2 I Pi $CellContext`k) $CellContext`sliderValue$$]], 
                Im[
                 
                 Exp[(Log[-1] + 
                   2 I Pi $CellContext`k) $CellContext`sliderValue$$]]}]}, \
{$CellContext`k, 0, 2}]]]}}], 
      "Specifications" :> {{$CellContext`sliderValue$$, -4, 2}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{288., {259., 264.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.899582632136511*^9, 3.899582712862747*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"a5e9fe49-4272-4b64-bb91-9b517c60daf0"]
}, Open  ]]
},
WindowSize->{906, 871},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7f2d7712-22e8-4896-a370-f8c94d50d549"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1161, 30, 52, "Input",ExpressionUUID->"a0034742-0d14-4fdd-b9b1-e6e44992e6fa"],
Cell[1744, 54, 53317, 889, 207, "Output",ExpressionUUID->"22788a9b-39d7-404f-b952-57d4522e9ea2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55098, 948, 1877, 50, 115, "Input",ExpressionUUID->"d26e5496-b378-414a-bda1-ef732b184518"],
Cell[56978, 1000, 2087, 45, 470, "Output",ExpressionUUID->"b013606d-93ba-44b6-bdc1-2d56212260e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59102, 1050, 3628, 95, 241, "Input",ExpressionUUID->"3cef2e18-966c-48dc-948c-aeedb7291c49"],
Cell[62733, 1147, 2669, 61, 304, "Output",ExpressionUUID->"d1f6168a-54c5-4ce1-bb74-ebba7024218e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65439, 1213, 9974, 244, 451, "Input",ExpressionUUID->"99139fc3-a36e-498b-a8bb-121d9a131c2c"],
Cell[75416, 1459, 4665, 113, 1808, "Output",ExpressionUUID->"a5e9fe49-4272-4b64-bb91-9b517c60daf0"]
}, Open  ]]
}
]
*)

